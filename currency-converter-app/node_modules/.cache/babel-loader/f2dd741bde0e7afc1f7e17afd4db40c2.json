{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [response, setResponse] = useState([]);\n  const [keys, setKeys] = useState([]);\n  const [values, setValues] = useState([]);\n\n  const fetchConversions = async value => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${value}&vs_currencies=btc,eth,ltc,xrp`);\n      const json = await response.json();\n      parseData(json);\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const parseValues = obj => {\n    const values = Object.values(obj);\n    values.forEach(val => {\n      if (val && typeof val === \"object\") {\n        const keys = Object.keys(val);\n        setKeys;\n      } else {\n        appendArray(val);\n      }\n    });\n  };\n\n  const appendArray = val => {\n    const clonedArray = [...parsedResults];\n    clonedArray.push(val);\n    setParsedResults(clonedArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Litecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ripple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"h4fk+sVF6PI2XMlnPx+XA7HcQG8=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["React","useState","useEffect","Converter","response","setResponse","keys","setKeys","values","setValues","fetchConversions","value","fetch","json","parseData","console","log","err","parseValues","obj","Object","forEach","val","appendArray","clonedArray","parsedResults","push","setParsedResults","e","target","innerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMS,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAAE,qDAAoDD,KAAM,gCAA5D,CAA5B;AACA,YAAME,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAT,EAAnB;AACAC,MAAAA,SAAS,CAACD,IAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KALD,CAKE,OAAOI,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GATD;;AAWA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,UAAMX,MAAM,GAAGY,MAAM,CAACZ,MAAP,CAAcW,GAAd,CAAf;AACAX,IAAAA,MAAM,CAACa,OAAP,CAAeC,GAAG,IAAI;AACpB,UAAKA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA3B,EAAsC;AACpC,cAAMhB,IAAI,GAAGc,MAAM,CAACd,IAAP,CAAYgB,GAAZ,CAAb;AACAf,QAAAA,OAAO;AACR,OAHD,MAGO;AACLgB,QAAAA,WAAW,CAACD,GAAD,CAAX;AACD;AACF,KAPD;AAQD,GAVD;;AAYA,QAAMC,WAAW,GAAID,GAAD,IAAS;AAC3B,UAAME,WAAW,GAAG,CAAC,GAAGC,aAAJ,CAApB;AACAD,IAAAA,WAAW,CAACE,IAAZ,CAAiBJ,GAAjB;AACAK,IAAAA,gBAAgB,CAACH,WAAD,CAAhB;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,OAAO,EAAGI,CAAD,IAAOlB,gBAAgB,CAACkB,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOlB,gBAAgB,CAACkB,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOlB,gBAAgB,CAACkB,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOlB,gBAAgB,CAACkB,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtDD;;GAAM3B,S;;KAAAA,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nconst Converter = () => {\n  const [response, setResponse] = useState([]);\n  const [keys, setKeys] = useState([]);\n  const [values, setValues] = useState([]);\n  \n\n  const fetchConversions = async (value) => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${value}&vs_currencies=btc,eth,ltc,xrp`);\n      const json = await response.json();\n      parseData(json);\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const parseValues = (obj) => {\n    const values = Object.values(obj)\n    values.forEach(val => {\n      if ( val && typeof val === \"object\" ) {\n        const keys = Object.keys(val)\n        setKeys\n      } else {\n        appendArray(val)\n      }\n    })\n  }\n\n  const appendArray = (val) => {\n    const clonedArray = [...parsedResults]\n    clonedArray.push(val)\n    setParsedResults(clonedArray)\n  }\n\n  return(\n    <div>\n      <ul>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Bitcoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ethereum</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Litecoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ripple</li>\n      </ul>\n\n      <div>\n        {\n          // parsedResults.length > 0 ? (parsedResults.map((result, index) => {\n          //   return (<span key={index}>{index + \": \" + result}</span>)\n          // })) : <div>Select a currency</div>\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}