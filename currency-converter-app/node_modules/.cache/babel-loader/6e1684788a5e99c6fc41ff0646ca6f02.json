{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ConversionService } from \"./ConversionService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [currency, setCurrency] = useState(\"\");\n  const [parsedResults, setParsedResults] = useState([]);\n\n  const fetchConversions = async value => {\n    // fetch currency conversions from coingecko api through ConversionService\n    // parse data from api call response\n    const json = await currencyConverter(value);\n    parseData(json);\n  };\n\n  const parseData = obj => {\n    // parse response and update UI data\n    var clonedArray = [...parsedResults];\n    const baseCurrency = Object.keys(obj)[0];\n    const conversions = obj[baseCurrency];\n    const keys = Object.keys(conversions);\n    clonedArray = [];\n    keys.forEach(key => {\n      clonedArray.push(key + \": \" + conversions[key]);\n    });\n    setCurrency(baseCurrency);\n    setParsedResults(clonedArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Litecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ripple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversionBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\",\n        children: currency.charAt(0).toUpperCase() + currency.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: parsedResults.length > 0 ? parsedResults.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: val\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"MONZ6HexPvLI1kyX6Z7KY1yDD0U=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["React","useState","useEffect","ConversionService","Converter","currency","setCurrency","parsedResults","setParsedResults","fetchConversions","value","json","currencyConverter","parseData","obj","clonedArray","baseCurrency","Object","keys","conversions","forEach","key","push","e","target","innerText","charAt","toUpperCase","slice","length","map","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC;AACA;AACA,UAAMC,IAAI,GAAG,MAAMC,iBAAiB,CAACF,KAAD,CAApC;AACAG,IAAAA,SAAS,CAACF,IAAD,CAAT;AACD,GALD;;AAOA,QAAME,SAAS,GAAIC,GAAD,IAAS;AACzB;AACA,QAAIC,WAAW,GAAG,CAAC,GAAGR,aAAJ,CAAlB;AACA,UAAMS,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiB,CAAjB,CAArB;AACA,UAAMK,WAAW,GAAGL,GAAG,CAACE,YAAD,CAAvB;AACA,UAAME,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYC,WAAZ,CAAb;AAEAJ,IAAAA,WAAW,GAAG,EAAd;AACAG,IAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAClBN,MAAAA,WAAW,CAACO,IAAZ,CAAiBD,GAAG,GAAG,IAAN,GAAaF,WAAW,CAACE,GAAD,CAAzC;AACD,KAFD;AAGAf,IAAAA,WAAW,CAACU,YAAD,CAAX;AACAR,IAAAA,gBAAgB,CAACO,WAAD,CAAhB;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,OAAO,EAAGQ,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BpB,QAAQ,CAACqB,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmCtB,QAAQ,CAACuB,KAAT,CAAe,CAAf;AAA/D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAEIrB,aAAa,CAACsB,MAAd,GAAuB,CAAvB,GAA4BtB,aAAa,CAACuB,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5D,8BAAQ;AAAA,sBAAgBD;AAAhB,aAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAF2B,CAA5B,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/CD;;GAAM5B,S;;KAAAA,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { ConversionService } from \"./ConversionService\";\nconst Converter = () => {\n  const [currency, setCurrency] = useState(\"\");\n  const [parsedResults, setParsedResults] = useState([]);\n  \n  const fetchConversions = async (value) => {\n    // fetch currency conversions from coingecko api through ConversionService\n    // parse data from api call response\n    const json = await currencyConverter(value)\n    parseData(json)\n  };\n\n  const parseData = (obj) => {\n    // parse response and update UI data\n    var clonedArray = [...parsedResults]\n    const baseCurrency = Object.keys(obj)[0]\n    const conversions = obj[baseCurrency]\n    const keys = Object.keys(conversions)\n\n    clonedArray = [];\n    keys.forEach(key => {\n      clonedArray.push(key + \": \" + conversions[key])\n    })\n    setCurrency(baseCurrency)\n    setParsedResults(clonedArray)\n  }\n\n  return(\n    <div className=\"main-container\">\n      <ul>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Bitcoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ethereum</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Litecoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ripple</li>\n      </ul>\n\n      <div className=\"conversionBox\">\n        <div className=\"underline\">{currency.charAt(0).toUpperCase() + currency.slice(1)}</div>\n        <div>\n          {\n            parsedResults.length > 0 ? (parsedResults.map((val, index) => {\n              return (<p key={index}>{val}</p>)\n            })):<div>Select a currency</div>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}