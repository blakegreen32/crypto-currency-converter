{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n\n  const fetchConversions = async () => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=$&vs_currencies=cad,eth`);\n      const json = await response.json();\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getValue = id => {\n    setId(id);\n    fetchConversions();\n  };\n\n  useEffect(() => {\n    (async () => {\n      await fetchConversions();\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"Dogecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"XRP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"SQeQWDFc29Ev91e6WLtZtKoLlno=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["React","useState","useEffect","Converter","id","setId","fetchConversions","response","fetch","json","console","log","err","getValue","e","target","innerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcJ,QAAQ,CAAC,EAAD,CAA5B;;AAGA,QAAMK,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2EAAF,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GARD;;AAUA,QAAMC,QAAQ,GAAIT,EAAD,IAAQ;AACvBC,IAAAA,KAAK,CAACD,EAAD,CAAL;AACAE,IAAAA,gBAAgB;AACjB,GAHD;;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMI,gBAAgB,EAAtB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,OAAO,EAAGQ,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;GAAMb,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nconst Converter = () => {\n  const [id, setId] = useState(\"\");\n  \n\n  const fetchConversions = async () => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=$&vs_currencies=cad,eth`);\n      const json = await response.json();\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getValue = (id) => {\n    setId(id);\n    fetchConversions()\n  }\n\n  useEffect(() => {\n    (async () => {\n      await fetchConversions();\n    })();\n  }, []);\n\n  return(\n    <div>\n      <ul>\n        <li onClick={(e) => getValue(e.target.innerText)}>Bitcoin</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>Ethereum</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>Dogecoin</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>XRP</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}