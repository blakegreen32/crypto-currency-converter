{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [currencies, setCurrencies] = useState([\"Bitcoin\", \"Ethereum\", \"Dogecoin\", \"XRP\"]);\n\n  const fetchConversions = async value => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${id}&vs_currencies=eth,ltc,xrp`);\n      const json = await response.json();\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getValue = async value => {\n    setId(value);\n    await fetchConversions();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"litecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => getValue(e.target.innerText),\n        children: \"ripple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"NaLJlfKXH3BlOCPHRMUXHBzYld8=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["React","useState","useEffect","Converter","id","setId","currencies","setCurrencies","fetchConversions","value","response","fetch","json","console","log","err","getValue","e","target","innerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcJ,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,KAApC,CAAD,CAA5C;;AAGA,QAAMO,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDP,EAAG,4BAAzD,CAA5B;AACA,YAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GARD;;AAUA,QAAMC,QAAQ,GAAG,MAAOP,KAAP,IAAiB;AAChCJ,IAAAA,KAAK,CAACI,KAAD,CAAL;AACA,UAAMD,gBAAgB,EAAtB;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,OAAO,EAAGS,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,SAAV,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BD;;GAAMhB,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nconst Converter = () => {\n  const [id, setId] = useState(\"\");\n  const [currencies, setCurrencies] = useState([\"Bitcoin\", \"Ethereum\", \"Dogecoin\", \"XRP\"]);\n  \n\n  const fetchConversions = async (value) => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${id}&vs_currencies=eth,ltc,xrp`);\n      const json = await response.json();\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getValue = async (value) => {\n    setId(value);\n    await fetchConversions();\n  }\n\n  return(\n    <div>\n      <ul>\n        <li onClick={(e) => getValue(e.target.innerText)}>bitcoin</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>ethereum</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>litecoin</li>\n        <li onClick={(e) => getValue(e.target.innerText)}>ripple</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}