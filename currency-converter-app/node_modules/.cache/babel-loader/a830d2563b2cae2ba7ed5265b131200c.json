{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ConversionService } from './ConversionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [selection, setSelection] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [parsedResults, setParsedResults] = useState([]);\n\n  const fetchConversions = async curr => {\n    // fetch currency conversions from coingecko api through ConversionService\n    // parse data from api call response\n    const json = await ConversionService(curr);\n    parseData(json);\n  };\n\n  const parseData = obj => {\n    // parse response and update UI data\n    var clonedArray = [...parsedResults];\n    const currency = Object.keys(obj)[0];\n    const conversions = obj[currency];\n    const keys = Object.keys(conversions);\n    clonedArray = [];\n    keys.forEach(key => {\n      clonedArray.push(key + \": \" + conversions[key]);\n    });\n    var img = \"assets/\" + currency + \"./png\";\n    setSelection(currency);\n    setImgUrl(img);\n    setParsedResults(clonedArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/bitcoin.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/ethereum.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Litecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/litecoin.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ripple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/xrp.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversionBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection\",\n        children: selection.charAt(0).toUpperCase() + selection.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: parsedResults.length > 0 ? parsedResults.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: val\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"Odo7susX5D7Vc4gOpMf37oqwmF8=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["useState","ConversionService","Converter","selection","setSelection","imgUrl","setImgUrl","parsedResults","setParsedResults","fetchConversions","curr","json","parseData","obj","clonedArray","currency","Object","keys","conversions","forEach","key","push","img","e","target","innerText","charAt","toUpperCase","slice","length","map","val","index"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { ConversionService } from './ConversionService'\nconst Converter = () => {\n  const [selection, setSelection] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [parsedResults, setParsedResults] = useState([]);\n  \n  const fetchConversions = async (curr) => {\n    // fetch currency conversions from coingecko api through ConversionService\n    // parse data from api call response\n    const json = await ConversionService(curr)\n    parseData(json)\n  };\n\n  const parseData = (obj) => {\n    // parse response and update UI data\n    var clonedArray = [...parsedResults]\n    const currency = Object.keys(obj)[0]\n    const conversions = obj[currency]\n    const keys = Object.keys(conversions)\n\n    clonedArray = [];\n    keys.forEach(key => {\n      clonedArray.push(key + \": \" + conversions[key])\n    })\n    var img = \"assets/\" + currency + \"./png\";\n    setSelection(currency)\n    setImgUrl(img)\n    setParsedResults(clonedArray)\n  }\n\n  return(\n    <div className=\"main-container\">\n      <ul>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Bitcoin</li>\n        <img src=\"assets/bitcoin.png\"/>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ethereum</li>\n        <img src=\"assets/ethereum.png\"/>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Litecoin</li>\n        <img src=\"assets/litecoin.png\"/>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ripple</li>\n        <img src=\"assets/xrp.png\"/>\n      </ul>\n\n      <div className=\"conversionBox\">\n        <div className=\"selection\">{selection.charAt(0).toUpperCase() + selection.slice(1)}</div>\n        <div>\n          {\n            parsedResults.length > 0 ? (parsedResults.map((val, index) => {\n              return (<p key={index}>{val}</p>)\n            })):<div>Select a currency</div>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}