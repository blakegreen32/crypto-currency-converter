{"ast":null,"code":"var _jsxFileName = \"/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [response, setResponse] = useState([]);\n  const [parsedResults, setParsedResults] = useState([]);\n\n  const fetchConversions = async value => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${value}&vs_currencies=btc,eth,ltc,xrp`);\n      const json = await response.json();\n      parseData(json);\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const parseData = (obj, fn) => {\n    const values = Object.values(obj);\n    values.forEach(val => val && typeof val === \"object\" ? parseData(val, fn) : fn(val));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Bitcoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Litecoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => fetchConversions(e.target.innerText),\n        children: \"Ripple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: parsedResults.length > 0 ? parsedResults.map((result, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: index + \": \" + result\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Converter, \"8djrqSYcTpjOQmx4eUbm+atrnjc=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/blakegreen/Desktop/currency-converter/currency-converter-app/src/components/Converter.js"],"names":["React","useState","useEffect","Converter","response","setResponse","parsedResults","setParsedResults","fetchConversions","value","fetch","json","parseData","console","log","err","obj","fn","values","Object","forEach","val","e","target","innerText","length","map","result","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;;AAGA,QAAMO,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAML,QAAQ,GAAG,MAAMM,KAAK,CAAE,qDAAoDD,KAAM,gCAA5D,CAA5B;AACA,YAAME,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;AACAC,MAAAA,SAAS,CAACD,IAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KALD,CAKE,OAAOI,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GATD;;AAWA,QAAMH,SAAS,GAAG,CAACI,GAAD,EAAMC,EAAN,KAAa;AAC7B,UAAMC,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcF,GAAd,CAAf;AACAE,IAAAA,MAAM,CAACE,OAAP,CAAeC,GAAG,IACdA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,GAAiCT,SAAS,CAACS,GAAD,EAAMJ,EAAN,CAA1C,GAAsDA,EAAE,CAACI,GAAD,CAD5D;AAEH,GAJC;;AAMA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,OAAO,EAAGC,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,OAAO,EAAGF,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,SAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAEIlB,aAAa,CAACmB,MAAd,GAAuB,CAAvB,GAA4BnB,aAAa,CAACoB,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC/D,4BAAQ;AAAA,oBAAmBA,KAAK,GAAG,IAAR,GAAeD;AAAlC,WAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD,OAF2B,CAA5B,gBAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1CD;;GAAMzB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nconst Converter = () => {\n  const [response, setResponse] = useState([]);\n  const [parsedResults, setParsedResults] = useState([]);\n  \n\n  const fetchConversions = async (value) => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${value}&vs_currencies=btc,eth,ltc,xrp`);\n      const json = await response.json();\n      parseData(json);\n      console.log(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const parseData = (obj, fn) => {\n    const values = Object.values(obj)\n    values.forEach(val => \n        val && typeof val === \"object\" ? parseData(val, fn) : fn(val))\n}\n\n  return(\n    <div>\n      <ul>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Bitcoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ethereum</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Litecoin</li>\n        <li onClick={(e) => fetchConversions(e.target.innerText)}>Ripple</li>\n      </ul>\n\n      <div>\n        {\n          parsedResults.length > 0 ? (parsedResults.map((result, index) => {\n            return (<span key={index}>{index + \": \" + result}</span>)\n          })) : <div>Select a currency</div>\n\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}